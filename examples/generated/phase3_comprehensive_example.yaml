# Phase 3 Comprehensive Example - Generated by Moveworks YAML Wizard
# This example demonstrates all the features implemented in Phase 3

input_args:
  user_id: data.user_id
  manager_id: data.manager_id
  notification_type: data.notification_type
  department: data.department

steps:
  # Step 1: Get user details with progress updates
  - action:
      action_name: mw.get_user_details
      output_key: user_info
      input_args:
        user_id: data.user_id
      progress_updates:
        on_pending: "Retrieving user information..."
        on_complete: "User details retrieved successfully"
      delay_config:
        seconds: "1"

  # Step 2: Process user data with script
  - script:
      code: "user_email = user_info.get('email', '').lower(); full_name = f\"{user_info.get('first_name', '')} {user_info.get('last_name', '')}\"; processed_data = {'email': user_email, 'name': full_name.strip(), 'department': department, 'is_manager': user_info.get('role') == 'manager'}"
      output_key: processed_user_data
      input_args:
        user_info: data.user_info
        department: data.department

  # Step 3: Conditional notification based on user role
  - switch:
      cases:
        - condition: data.processed_user_data.is_manager == true
          steps:
            - action:
                action_name: mw.send_rich_chat_notification
                output_key: manager_notification
                input_args:
                  user_record_id: data.manager_id
                  card_content: data.manager_notification_card
                progress_updates:
                  on_pending: "Sending manager notification..."
                  on_complete: "Manager notification sent"
        - condition: data.notification_type == 'urgent'
          steps:
            - action:
                action_name: mw.send_plaintext_chat_notification
                output_key: urgent_notification
                input_args:
                  user_record_id: data.user_id
                  message: "URGENT: Your request requires immediate attention"
                progress_updates:
                  on_pending: "Sending urgent notification..."
                  on_complete: "Urgent notification sent"
      default:
        steps:
          - action:
              action_name: mw.send_plaintext_chat_notification
              output_key: standard_notification
              input_args:
                user_record_id: data.user_id
                message: "Your request has been processed successfully"
              progress_updates:
                on_pending: "Sending standard notification..."
                on_complete: "Standard notification sent"

  # Step 4: Log the activity
  - script:
      code: "activity_log = {'user_id': user_id, 'processed_at': 'now', 'notification_sent': True, 'user_email': processed_user_data['email']}"
      output_key: activity_log
      input_args:
        user_id: data.user_id
        processed_user_data: data.processed_user_data

  # Step 5: Return comprehensive results
  - return:
      output_mapper:
        user_email: data.processed_user_data.email
        user_name: data.processed_user_data.name
        department: data.processed_user_data.department
        notification_sent: "true"
        activity_logged: "true"
        processing_timestamp: data.activity_log.processed_at
